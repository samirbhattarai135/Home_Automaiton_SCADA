module.exports=function(t){require("source-map-support").install();var o=require("./modbus-basics"),n=require("debug")("contribModbus:flex:connector");t.nodes.registerType("modbus-flex-connector",function(e){t.nodes.createNode(this,e),this.name=e.name,this.maxReconnectsPerMinute=e.maxReconnectsPerMinute||4,this.emptyQueue=e.emptyQueue,this.showStatusActivities=e.showStatusActivities,this.showErrors=e.showErrors,this.connection=null,this.internalDebugLog=n,this.verboseLogging=t.settings.verbose,this.server=t.nodes.getNode(e.server),this.emptyMsgOnFail=e.emptyMsgOnFail,this.configMsgOnChange=e.configMsgOnChange;var s=this;o.setNodeStatusTo("waiting",s),s.server?(o.setNodeStatusTo("connecting",s),s.server.registerForModbus(s),o.initModbusClientEvents(s,this.server),s.onConfigDone=function(e){s.showStatusActivities?o.setNodeStatusTo(s.server.actualServiceState,s):o.setNodeDefaultStatus(s),s.configMsgOnChange?(e.payload=e.payload||{},e.payload.status="changed"):e.config_change="emitted",s.send(e)},s.onConfigError=function(e,t){n(e.message),s.showErrors&&(s.showStatusActivities?o.setNodeStatusTo("error",s):o.setNodeDefaultStatus(s),e&&e.message?t.error=e:t.error=new Error(e),t.error.nodeStatus=s.statusText,s.error(t.error,t),s.emptyMsgOnFail&&(t.payload=""),s.send(t))},s.on("input",function(e){var t;o.invalidPayloadIn(e)||(s.showStatusActivities&&o.setNodeStatusTo(s.server.actualServiceState,s),e.payload.connectorType?(n("dynamicReconnect: ".concat(JSON.stringify(e.payload))),e.payload.emptyQueue=s.emptyQueue,s.server.emit("dynamicReconnect",e,s.onConfigDone,s.onConfigError)):(t=new Error("Payload Not Valid - Connector Type"),s.error(t,e),s.send(e)))}),s.showStatusActivities?o.setNodeStatusTo("active",s):o.setNodeDefaultStatus(s)):o.setNodeStatusTo("disconnected",s)})};
//# sourceMappingURL=maps/modbus-flex-connector.js.map
